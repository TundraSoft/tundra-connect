name: 🔤 Spell Check

on:
  pull_request:
    types: [opened, edited, synchronize]
  push:
    branches: [main, develop]

permissions:
  contents: read
  pull-requests: write

jobs:
  spell-check:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔤 Run spell check
        uses: crate-ci/typos@v1.24.6
        with:
          config: ./.typos.toml

      - name: 📝 Comment on PR with spell check results
        if: failure() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const commentBody = `## 🔤 Spell Check Results

            ❌ **Potential typos were found in this PR.**

            Please review the spell check results in the workflow logs and fix any actual typos.

            ### How to fix:
            1. Check the workflow logs for specific files and line numbers
            2. Fix genuine typos in your code/documentation
            3. For technical terms or proper nouns, add them to \`.typos.toml\`

            ### Common false positives:
            - API names, product names, technical terms
            - Variable names with abbreviations
            - Base64 encoded strings, hashes
            - Code examples with placeholder text

            If these are legitimate technical terms, please add them to the \`.typos.toml\` configuration file.`;

            // Check if we already posted a comment
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const existingComment = comments.data.find(comment => 
              comment.user.login === 'github-actions[bot]' && 
              comment.body.includes('Spell Check Results')
            );

            if (existingComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: commentBody
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: commentBody
              });
            }
